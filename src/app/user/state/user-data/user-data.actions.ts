import {createAction, props} from '@ngrx/store';
import {Role, UserData} from '../../user';

export const CheckUserDataExists = createAction('[UserData] Checking if user data exists', props<{uid: string}>());
export const GetUserData = createAction('[UserData] Get user data', props<{ uid: string }>());
export const GetUserDataSuccess = createAction('[UserData] Get user data succeeded', props<UserData>());
export const GetUserDataFail = createAction('[UserData] Get user data failed', props<Error>());
export const CreateDefaultUserData = createAction('[UserData] Create default user data', props<{uid: string}>());
export const CreateDefaultUserDataSuccess = createAction('[UserData] Create default user data succeeded');
export const CreateDefaultUserDataFail = createAction('[UserData] Create default user data failed', props<Error>());
export const ClearUserData = createAction('[UserData] Clearing user data');
export const ChangeRole = createAction('[Role] Change account type', props<{ role: Role }>());
export const ChangeRoleSuccess = createAction('[Role] Changing role succeeded');
export const ChangeRoleFail = createAction('[Role] Changing role failed', props<Error>());
export const AddFavorite = createAction('[Favorites] Adding favorite song', props<{ uid: string, songId: string }>());
export const AddFavoriteSuccess = createAction('[Favorites] Adding favorite song succeeded', props<{ id: string }>());
export const AddFavoriteFail = createAction('[Favorites] Adding favorite song failed', props<Error>());
export const RemoveFavorite = createAction('[Favorites] Removing favorite song', props<{ uid: string, songId: string }>());
export const RemoveFavoriteSuccess = createAction('[Favorites] Removing favorite song succeeded', props<{ id: string }>());
export const RemoveFavoriteFail = createAction('[Favorites] Removing favorite song failed', props<Error>());
